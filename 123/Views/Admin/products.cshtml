@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model _123.ProductViewModel

<div class="card mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Thông tin sản phẩm</h6>
    </div>
    <div class="d-flex justify-content-end">
        <div style="margin: 10px 0 0;">
            <input type="file" id="excel" accept=".xls,.xlsx" style="display: none;">
            <button type="button" class="btn btn-outline-success" onclick="document.getElementById('excel').click()">Chọn file excel</button>
        </div>
        <button type="button" class="btn btn-outline-info" style="margin: 10px 40px 0 20px;" 
                data-toggle="modal" data-target="#product-add">
            Thêm mới
        </button>
        @await Html.PartialAsync("/Views/Admin/productadd.cshtml", new Product()) 
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered styled-table" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Tên sản phẩm</th>
                        <th>Mô tả</th>
                        <th>Giá</th>
                        <th>Danh mục</th>
                        <th>Chất liệu</th>
                        <th>Hình ảnh</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Products.Count(); i++)
                    {
                        <tr>
                            <td>@(i + 1)</td> <!-- Số thứ tự -->
                            <td>@Model.Products[i].ProductName</td>
                            <td>@Model.Products[i].Description</td>
                            <td>@string.Format("{0:C}", Model.Products[i].Price)</td>
                            <td>@(Model.Products[i].Category?.CategoryName ?? "N/A")</td> <!-- Hiển thị tên danh mục -->
                            <td>@(Model.Products[i].Material?.MaterialName ?? "N/A")</td>
                            <td>
                                <img src="@Model.Products[i].ImageUrl" alt="Image" style="width: 50px; height: auto;" />
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-primary update-button" 
                                        data-toggle="modal" 
                                        data-target="#product-edit-@Model.Products[i].ProductId">
                                    <i class="material-icons" style="font-size: 14px">border_color</i>
                                </button>
                                @await Html.PartialAsync("/Views/Admin/productedit.cshtml", Model.Products[i])
                                
                                <button type="button" class="btn btn-outline-danger delete-button" 
                                        data-toggle="modal" 
                                        data-target="#product-delete-@Model.Products[i].ProductId">
                                    <i class="material-icons" style="font-size: 14px">delete</i>
                                </button>
                                @await Html.PartialAsync("/Views/Admin/productdelete.cshtml", Model.Products[i])
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <script> 
       
        let updateButtons = document.querySelectorAll('.update-button')
        let deleteButtons = document.querySelectorAll('.delete-button')

        if (role!=2) {
            updateButtons.forEach(button => {
                button.style.display = "none";
            });
            deleteButtons.forEach(button => {
                button.style.display = "none";
            });
        }
    </script> 
    <script>
        document.getElementById('excel').addEventListener('change', async function (event) {
            const file = event.target.files[0];

            try {
                // Tạo FormData và thêm file vào
                const formData = new FormData();
                formData.append('file', file);

                // Gọi API
                const response = await fetch('https://localhost:5003/api/upload-excel-product', {
                    method: 'POST',
                    body: formData,
                });
                if (response.ok) {
                    const result = await response.json();
                    console.log("Kết quả từ API:", result);
                    alert('Them thanh cong')
                    location.reload();
                } else {
                    console.error("API trả về lỗi:", response.status);
                }
            } catch (error) {
                console.error("Lỗi khi upload file:", error);
                alert("Đã xảy ra lỗi khi upload file!");
            }
        });
    </script> 
</div>
